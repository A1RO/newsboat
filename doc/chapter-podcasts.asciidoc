A podcast is a media file distributed over the internet using syndication feeds
such as RSS, for later playback on portable players or computers.
Newsboat supports downloading, saving and streaming podcasts, though an external
media player is needed for playback. This support differs a bit from other
podcast aggregators or "podcatchers" in how it is done.

Podcast content is transported in RSS feeds via special tags called
"enclosures". Newsboat recognizes these enclosures and stores the relevant
information for every podcast item it finds in an RSS feed. Since version 2.0,
it also recognizes and handles the Yahoo Media RSS extensions.

The following sections present two different ways to handle podcasts with
newsboat.

==== Managing Audio Files with Podboat

What the user can do is to add the podcast download URL to a download queue.
Alternatively, newsboat can be configured to automatically do that. This
queue is stored in the _queue_ file next to the _cache.db_ file.

The user can then use the download manager `podboat` to download these files
to a directory on the local filesystem. Podboat comes with the newsboat
package, and features a look and feel very close to the one of newsboat. It
also shares the same configuration file.

Podcasts that have been downloaded but haven't been played yet remain in the
queue but are marked as downloaded. You can remove them by purging them from
the queue with the "P" key. After you've played a file and close podboat, it
will be removed from the queue. The downloaded file remains on the
filesystem unless "delete-played-files" is enabled.

A common "use case" is to configure newsboat to automatically enqueue newly
found podcast download URLs. Then, the user reloads the podcast RSS feeds in
newsboat, and after that, uses podboat to view the current queue, and
either selectively download certain files or automatically download them all
together by pressing "a" within podboat.

A macro can also be used to enqueue any of the URLs from the URLs view to
podboat's download queue (which might be in _~/.locale/share/newsboat/queue_ if
you're using XDG directories):

  macro E set browser "echo %u >> ~/.newsboat/queue"; open-in-browser; set browser "elinks %u"

==== Streaming Audio Content with a Media Player

As an alternative to `podboat` file management, media players such as `mpv` can
stream content directly when given a URL. Since newsboat always assign the
enclosure link to URL 1, the operation `one` can be used to open the audio file
(beware that this operation will always open URL 1, even if no enclosure is
found). To listen to your podcast from the article view, a basic macro would be:

  macro 1 set browser mpv; one; set browser firefox

For media players with a graphical user interface like `vlc`, console output
will typically need to be silenced with `>/dev/null 2>&1`. Also, the `&`
character at the end of the browser command will detach the media player from
newsboat. You can then read your articles while listening to podcasts:

  macro v set browser "vlc %u >/dev/null 2>&1 &"; one; set browser firefox

With mpv, the podcast cover art is fetched automatically when using the
pseudo-gui. The `--` at the end will prevent mpv from interpreting the following
arguments as options:

  macro p set browser "mpv --player-operation-mode=pseudo-gui -- %u &"; one; set browser firefox

To use mpv's console interface instead, first launch a terminal emulator
which will in turn execute mpv. This way, newsboat and the media player can both
be controlled with text-based interfaces, side by side.

  macro c set browser "alacritty -e mpv --vid=no -- %u &"; one; set browser firefox

If you are working without a graphical environment (e.g. from a virtual
console), you want to make sure the media player doesn't try to launch a
graphical user interface. With mpv, the `--vid=no` option can be used for this
purpose:

  macro n set browser "mpv --vid=no --"; one; set browser lynx

Another use case for this macro would be when running newsboat on a
remote host, while logged in through a secure shell (e.g. OpenSSH).
With this setup, newsboat will effectively be used as the controller to an ad hoc
"remote media server". Audio will be playing on the remote host.
